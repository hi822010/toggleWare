--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then local v81=0;while true do if (v81==0) then v19=v0(v3(v30,1,1));return "";end end else local v82=v2(v0(v30,16));if v19 then local v88=v5(v82,v19);v19=nil;return v88;else return v82;end end end);local function v20(v31,v32,v33) if v33 then local v83=(v31/((5 -3)^(v32-(2 -(1 + 0)))))%((1 + 1)^(((v33-(1 -0)) -(v32-1)) + (2 -1))) ;return v83-(v83%(620 -((1432 -(282 + 595)) + 64))) ;else local v84=(933 -((2494 -(1523 + 114)) + 74))^(v32-(569 -(367 + 201))) ;return (((v31%(v84 + v84))>=v84) and 1) or (927 -(214 + 713)) ;end end local function v21() local v34=0 + 0 ;local v35;while true do if (v34==(1 -0)) then return v35;end if (v34==(1065 -(68 + 997))) then v35=v1(v16,v18,v18);v18=v18 + ((5534 -4263) -(226 + 1044)) ;v34=1;end end end local function v22() local v36,v37=v1(v16,v18,v18 + (119 -(32 + 85)) );v18=v18 + 2 + 0 ;return (v37 * 256) + v36 ;end local function v23() local v38,v39,v40,v41=v1(v16,v18,v18 + (351 -(87 + 263)) + 2 );v18=v18 + (961 -(892 + 65)) ;return (v41 * (40022563 -23245347)) + (v40 * ((121318 -(67 + 113)) -55602)) + (v39 * (469 -213)) + v38 ;end local function v24() local v42=v23();local v43=v23();local v44=1 + 0 ;local v45=(v20(v43,2 -1 ,(33 -(10 + 8)) + 5 ) * ((7 -5)^32)) + v42 ;local v46=v20(v43,(3742 -2769) -(802 + 150) ,83 -52 );local v47=((v20(v43,57 -25 )==(443 -(416 + 26))) and  -(1 + 0)) or (998 -(915 + (261 -179))) ;if (v46==(0 -0)) then if (v45==(0 + 0)) then return v47 * 0 ;else local v89=0 -0 ;while true do if (v89==((510 + 677) -(1069 + 118))) then v46=2 -1 ;v44=0;break;end end end elseif (v46==2047) then return ((v45==(0 -0)) and (v47 * ((1 + 0)/((0 -0) -0)))) or (v47 * NaN) ;end return v8(v47,v46-(1015 + 8) ) * (v44 + (v45/((793 -(368 + 423))^((601 -(145 + 293)) -111)))) ;end local function v25(v48) local v49=430 -((156 -112) + 386) ;local v50;local v51;while true do if (v49==0) then v50=nil;if  not v48 then v48=v23();if (v48==(1486 -(998 + (1347 -(814 + 45))))) then return "";end end v49=1 + 0 ;end if (v49==(10 -7)) then return v6(v51);end if (v49==(2 + 0)) then v51={};for v90=(1904 -1131) -(201 + 571) , #v50 do v51[v90]=v2(v1(v3(v50,v90,v90)));end v49=3;end if (v49==(1139 -(7 + 109 + 1022))) then v50=v3(v16,v18,(v18 + v48) -(4 -3) );v18=v18 + v48 ;v49=2 + 0 ;end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=(function() return 651 -(494 + 157) ;end)();local v53=(function() return;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();local v59=(function() return;end)();while true do local v66=(function() return 0 -0 ;end)();while true do if (0==v66) then if (v52~=(0 + 0)) then else v53=(function() return function(v101,v102,v103) local v104=(function() return 0;end)();while true do if (v104==0) then local v113=(function() return 0 + 0 ;end)();while true do if (v113~=(0 + 0)) then else local v120=(function() return 836 -(660 + 176) ;end)();while true do if (v120==(0 + 0)) then v101[v102-#"\\" ]=(function() return v103();end)();return v101,v102,v103;end end end end end end end;end)();v54=(function() return {};end)();v55=(function() return {};end)();v56=(function() return {};end)();v52=(function() return 1;end)();end if (v52~=(203 -(14 + 188))) then else local v96=(function() return 0;end)();while true do if (v96==2) then v52=(function() return 2;end)();break;end if (v96==0) then v57=(function() return {v54,v55,nil,v56};end)();v58=(function() return v23();end)();v96=(function() return 1;end)();end if (v96~=1) then else v59=(function() return {};end)();for v109= #"~",v58 do local v110=(function() return 0;end)();local v111=(function() return;end)();local v112=(function() return;end)();while true do if (v110~=(675 -(534 + 141))) then else local v118=(function() return 0 + 0 ;end)();while true do if (0==v118) then local v207=(function() return 0;end)();while true do if (1==v207) then v118=(function() return 1 + 0 ;end)();break;end if (v207==0) then v111=(function() return v21();end)();v112=(function() return nil;end)();v207=(function() return 1 + 0 ;end)();end end end if (v118==1) then v110=(function() return 1 -0 ;end)();break;end end end if (v110~=1) then else if (v111== #"}") then v112=(function() return v21()~=0 ;end)();elseif (v111==2) then v112=(function() return v24();end)();elseif (v111== #"asd") then v112=(function() return v25();end)();end v59[v109]=(function() return v112;end)();break;end end end v96=(function() return 2;end)();end end end v66=(function() return 1 -0 ;end)();end if (v66==(2 -1)) then if (v52==(2 + 0)) then v57[ #"gha"]=(function() return v21();end)();for v98= #"~",v23() do local v99=(function() return v21();end)();if (v20(v99, #"!", #">")==(0 + 0)) then local v105=(function() return 396 -(115 + 281) ;end)();local v106=(function() return;end)();local v107=(function() return;end)();local v108=(function() return;end)();while true do if (v105==(4 -2)) then if (v20(v107, #"\\", #"{")== #"]") then v108[2]=(function() return v59[v108[2 + 0 ]];end)();end if (v20(v107,2,4 -2 )== #",") then v108[ #"xnx"]=(function() return v59[v108[ #"nil"]];end)();end v105=(function() return 3;end)();end if (v105==3) then if (v20(v107, #"19(", #"xxx")~= #"!") then else v108[ #"0313"]=(function() return v59[v108[ #"0313"]];end)();end v54[v98]=(function() return v108;end)();break;end if (v105==(0 -0)) then local v115=(function() return 867 -(550 + 317) ;end)();while true do if (v115==0) then v106=(function() return v20(v99,2 -0 , #"-19");end)();v107=(function() return v20(v99, #".dev",6);end)();v115=(function() return 1 -0 ;end)();end if (v115~=(2 -1)) then else v105=(function() return 286 -(134 + 151) ;end)();break;end end end if (v105==(1666 -(970 + 695))) then local v116=(function() return 0 -0 ;end)();local v117=(function() return;end)();while true do if (v116==0) then v117=(function() return 0;end)();while true do if (v117~=1) then else v105=(function() return 2;end)();break;end if (v117~=0) then else local v327=(function() return 1990 -(582 + 1408) ;end)();while true do if ((0 -0)~=v327) then else v108=(function() return {v22(),v22(),nil,nil};end)();if (v106==0) then local v393=(function() return 0;end)();local v394=(function() return;end)();while true do if (v393~=0) then else v394=(function() return 0;end)();while true do if (v394==(0 -0)) then v108[ #"19("]=(function() return v22();end)();v108[ #"?id="]=(function() return v22();end)();break;end end break;end end elseif (v106== #">") then v108[ #"-19"]=(function() return v23();end)();elseif (v106==2) then v108[ #"19("]=(function() return v23() -(2^16) ;end)();elseif (v106~= #"19(") then else local v411=(function() return 0;end)();local v412=(function() return;end)();while true do if (v411==0) then v412=(function() return 0;end)();while true do if (v412==(1824 -(1195 + 629))) then v108[ #"-19"]=(function() return v23() -((2 -0)^16) ;end)();v108[ #"?id="]=(function() return v22();end)();break;end end break;end end end v327=(function() return 1;end)();end if (v327~=1) then else v117=(function() return 242 -(187 + 54) ;end)();break;end end end end break;end end end end end end for v100= #":",v23() do v55,v100,v28=(function() return v53(v55,v100,v28);end)();end return v57;end break;end end end end local function v29(v60,v61,v62) local v63=v60[781 -(162 + 618) ];local v64=v60[2 + 0 ];local v65=v60[(6 -4) + 1 ];return function(...) local v67=v63;local v68=v64;local v69=v65;local v70=v27;local v71=1 -0 ;local v72= -(1 -0);local v73={};local v74={...};local v75=v12("#",...) -(1637 -(1373 + 263)) ;local v76={};local v77={};for v85=1000 -(451 + (1062 -(203 + 310))) ,v75 do if (v85>=v69) then v73[v85-v69 ]=v74[v85 + (2 -1) ];else v77[v85]=v74[v85 + (1994 -(1238 + 755)) ];end end local v78=(v75-v69) + 1 + 0 ;local v79;local v80;while true do v79=v67[v71];v80=v79[1 -0 ];if (v80<=(72 -29)) then if (v80<=(1405 -(746 + 45 + 593))) then if ((v80<=((1538 -(709 + 825)) + 6)) or (1949<71)) then if (v80<=((8 -3) -1)) then if (v80<=1) then if (v80==(341 -(218 + 123))) then v77[v79[1583 -(1535 + 46) ]][v79[1436 -(797 + 636) ]]=v79[19 -(21 -6) ];else v77[v79[2 + 0 ]][v79[2 + 1 ]]=v77[v79[4]];end elseif (v80<=(1 + 1)) then v77[v79[562 -((1170 -(196 + 668)) + 254) ]]=v77[v79[1 + 2 ]] + v79[7 -3 ] ;elseif (v80==(1470 -(899 + 568))) then local v208=0 + (0 -0) ;local v209;while true do if ((4254==4254) and (v208==(0 -0))) then v209=v79[2 + 0 ];v77[v209](v13(v77,v209 + (1 -0) + 0 ,v72));break;end end else v77[v79[(1438 -(171 + 662)) -(268 + 335) ]]();end elseif ((3196>=2550) and (v80<=(297 -(60 + 230)))) then if (v80<=(577 -(426 + 146))) then for v199=v79[1 + 1 ],v79[4 -1 ] do v77[v199]=nil;end elseif (v80==(1462 -(282 + 1174))) then local v210=v79[813 -(569 + (335 -(4 + 89))) ];local v211,v212=v70(v77[v210](v13(v77,v210 + (2 -1) ,v79[1 + 2 ])));v72=(v212 + v210) -(1025 -((2474 -1768) + 116 + 202)) ;local v213=1251 -(721 + 530) ;for v293=v210,v72 do local v294=1271 -(945 + 326) ;while true do if ((2456<4176) and (((0 -0) -0)==v294)) then v213=v213 + 1 + 0 ;v77[v293]=v211[v213];break;end end end else local v214=v79[702 -(271 + 429) ];v77[v214]=v77[v214](v77[v214 + 1 + 0 ]);end elseif ((v80<=((699 + 1081) -(1733 + 39))) or (1150==3452)) then v77[v79[1502 -(1408 + 92) ]][v77[v79[1037 -(125 + 909) ]]]=v79[1090 -(461 + (2111 -(35 + 1451))) ];elseif (v80==((2750 -(28 + 1425)) -(993 + (2288 -(941 + 1052))))) then v77[v79[1 + 1 ]]=v79[1174 -(401 + 17 + 753) ]~=(0 + (1514 -(822 + 692))) ;else v77[v79[1 + (1 -0) ]]=v62[v79[239 -(46 + 190) ]];end elseif (v80<=(2 + 13)) then if (v80<=(4 + 8)) then if (v80==(3 + 8)) then local v131=1317 -(1114 + 96 + 107) ;local v132;local v133;local v134;local v135;while true do if (v131==(530 -(406 + (420 -(45 + 252))))) then v72=(v134 + v132) -(1770 -(1749 + 20)) ;v135=0 + 0 ;v131=2;end if ((1324 -(1249 + 73))==v131) then for v328=v132,v72 do v135=v135 + (2 -(1 + 0)) ;v77[v328]=v133[v135];end break;end if (v131==(0 + 0)) then v132=v79[1147 -(466 + 679) ];v133,v134=v70(v77[v132](v13(v77,v132 + ((438 + 832) -(231 + (2526 -1488))) ,v79[(439 -(114 + 319)) -3 ])));v131=1163 -(171 + (1422 -431)) ;end end else for v201=v79[5 -3 ],v79[1903 -(106 + 1794) ] do v77[v201]=nil;end end elseif (v80<=(5 + 8)) then if (v79[1 + 1 ]==v77[v79[4]]) then v71=v71 + (2 -1) ;else v71=v79[7 -(4 -0) ];end elseif ((1875<2258) and (v80>14)) then v77[v79[116 -(3 + 1 + 110) ]][v77[v79[587 -(57 + (784 -257)) ]]]=v77[v79[1431 -(41 + 1386) ]];else v77[v79[105 -(17 + 86) ]][v79[3 + 0 ]]=v77[v79[4]];end elseif (v80<=(39 -21)) then if (v80<=(46 -30)) then local v136=166 -(122 + 44) ;local v137;while true do if (v136==(0 -0)) then v137=v79[(12 -6) -4 ];v77[v137]=v77[v137](v13(v77,v137 + (524 -(423 + (2063 -(556 + 1407)))) ,v79[3 + 0 ]));break;end end elseif (v80>(3 + 14)) then local v224=v79[3 -1 ];do return v13(v77,v224,v72);end elseif ((1173>41) and (v77[v79[67 -(30 + 35) ]]==v79[(1209 -(741 + 465)) + 1 ])) then v71=v71 + (772 -(326 + 445)) ;else v71=v79[13 -10 ];end elseif (v80<=((1741 -(170 + 295)) -(1043 + 113 + 101))) then v77[v79[7 -5 ]]=v77[v79[1215 -(297 + 26 + (2188 -1299)) ]]%v77[v79[10 -6 ]] ;elseif (v80==(600 -(361 + 219))) then local v225=(266 + 54) -(53 + 267) ;local v226;while true do if (v225==(0 + 0)) then v226=v79[415 -(15 + 398) ];v77[v226]=v77[v226](v13(v77,v226 + (983 -(18 + 964)) ,v79[11 -8 ]));break;end end else local v227=v79[2 + 0 ];local v228=v77[v227];local v229=v77[v227 + (3 -1) ];if (v229>(0 + 0)) then if (v228>v77[v227 + (1813 -(1293 + 519)) ]) then v71=v79[5 -2 ];else v77[v227 + (853 -(20 + 830)) ]=v228;end elseif (v228<v77[v227 + 1 + 0 ]) then v71=v79[(8 + 4) -9 ];else v77[v227 + (129 -(116 + 10)) ]=v228;end end elseif ((v80<=(75 -43)) or (56>=3208)) then if ((4313>3373) and (v80<=(2 + 24))) then if (v80<=((431 + 330) -(542 + 196))) then if ((v80==(46 -24)) or (4493==2225)) then local v139=0 + 0 ;local v140;local v141;while true do if (v139==(1 + 0)) then for v332=v140 + 1 + 0 ,v79[1100 -(709 + 387) ] do v141=v141   .. v77[v332] ;end v77[v79[(3090 -(957 + 273)) -(180 + 493 + 1185) ]]=v141;break;end if (v139==(0 + 0)) then v140=v79[7 -4 ];v141=v77[v140];v139=2 -1 ;end end else v77[v79[1553 -(1126 + 425) ]]=v77[v79[408 -(118 + 287) ]]%v79[15 -11 ] ;end elseif (v80<=(1145 -(118 + 1003))) then local v143=v79[1 + 1 ];local v144=v77[v143 + (5 -3) ];local v145=v77[v143] + v144 ;v77[v143]=v145;if ((3104>=3092) and (v144>(377 -(142 + 235)))) then if (v145<=v77[v143 + (4 -3) ]) then local v333=0 + 0 ;while true do if (v333==0) then v71=v79[1286 -(1040 + 243) ];v77[v143 + (980 -(553 + 424)) ]=v145;break;end end end elseif (v145>=v77[v143 + (1 -0) ]) then local v334=0 + 0 ;while true do if ((3548>3098) and (v334==(0 + 0))) then v71=v79[2 + 1 ];v77[v143 + 2 + 1 ]=v145;break;end end end elseif (v80==(65 -40)) then local v230=v77[v79[3 + 1 ]];if  not v230 then v71=v71 + (2 -1) ;else v77[v79[5 -(2 + 1) ]]=v230;v71=v79[6 -3 ];end else local v231=v79[1 + 1 ];do return v77[v231](v13(v77,v231 + (4 -(11 -8)) ,v79[(1992 -1236) -(239 + 514) ]));end end elseif ((v80<=(11 + 18)) or (3252==503)) then if (v80<=(1356 -(797 + 532))) then local v147=0 + 0 ;local v148;local v149;local v150;while true do if ((4733>2066) and (v147==(3 -(2 -1)))) then for v337=1 + (0 -0) ,v79[3 + 1 ] do v71=v71 + 1 + 0 ;local v338=v67[v71];if (v338[2 -1 ]==(1250 -(373 + 829))) then v150[v337-(732 -(476 + 255)) ]={v77,v338[5 -2 ]};else v150[v337-((1781 -(389 + 1391)) -0) ]={v61,v338[3 -0 ]};end v76[ #v76 + ((212 + 125) -(144 + 192)) ]=v150;end v77[v79[(23 + 195) -(42 + 174) ]]=v29(v148,v149,v62);break;end if (v147==(0 + 0)) then v148=v68[v79[3 + 0 ]];v149=nil;v147=1 + 0 ;end if (v147==(1 -0)) then v150={};v149=v10({},{__index=function(v340,v341) local v342=v150[v341];return v342[1 + 0 ][v342[1506 -(363 + 1141) ]];end,__newindex=function(v343,v344,v345) local v346=1580 -(1183 + 397) ;local v347;while true do if (v346==(0 -0)) then v347=v150[v344];v347[1 + 0 ][v347[2 + 0 ]]=v345;break;end end end});v147=2 + 0 ;end end elseif ((3549>=916) and (v80==(2003 -(1913 + 62)))) then v77[v79[1 + 1 ]]= #v77[v79[2 + 1 ]];else local v233=v79[(11 -6) -3 ];local v234=v77[v233 + (1935 -(565 + 1368)) ];local v235=v77[v233] + v234 ;v77[v233]=v235;if (v234>(0 -0)) then if (v235<=v77[v233 + (1662 -(1477 + 184)) ]) then local v377=0 -0 ;while true do if (v377==(0 + (951 -(783 + 168)))) then v71=v79[1 + 2 ];v77[v233 + (859 -(564 + 292)) ]=v235;break;end end end elseif (v235>=v77[v233 + (1 -0) ]) then local v378=0 -0 ;while true do if (v378==(0 + 0)) then v71=v79[(1030 -723) -(244 + 60) ];v77[v233 + 3 + 0 ]=v235;break;end end end end elseif (v80<=(506 -(41 + 435))) then v77[v79[2 + 0 ]]=v79[3]~=(1001 -(938 + 63)) ;elseif ((v80>(85 -54)) or (2189<=245)) then local v237=v68[v79[3]];local v238;local v239={};v238=v10({},{__index=function(v303,v304) local v305=v239[v304];return v305[1 + 0 ][v305[1127 -(936 + 189) ]];end,__newindex=function(v306,v307,v308) local v309=v239[v307];v309[1 + 0 ][v309[1615 -(1565 + 48) ]]=v308;end});for v311=(1714 -(309 + 2)) -(832 + 570) ,v79[4 + 0 ] do v71=v71 + 1 + (0 -0) ;local v312=v67[v71];if ((v312[1 + 0 ]==(1186 -(782 + 356))) or (1389>3925)) then v239[v311-(797 -(588 + 208)) ]={v77,v312[1803 -(884 + 916) ]};else v239[v311-1 ]={v61,v312[1878 -(157 + 1718) ]};end v76[ #v76 + 1 + 0 ]=v239;end v77[v79[6 -4 ]]=v29(v237,v238,v62);else v77[v79[6 -4 ]]=v77[v79[1021 -(697 + 321) ]]%v79[10 -6 ] ;end elseif ((4169>=3081) and (v80<=(78 -41))) then if (v80<=(77 -43)) then if ((349<=894) and (v80>(638 -(316 + 289)))) then local v152=v79[5 -(1215 -(1090 + 122)) ];local v153=v77[v79[1 + 2 ]];v77[v152 + 1 + 0 + 0 ]=v153;v77[v152]=v153[v79[6 -2 ]];else local v157=v79[2 + (0 -0) ];v77[v157](v77[v157 + (2 -1) ]);end elseif (v80<=(1262 -(322 + 905))) then local v158=v79[2];local v159=v77[v79[614 -(602 + 9) ]];v77[v158 + (1190 -(308 + 141 + 740)) ]=v159;v77[v158]=v159[v79[876 -(826 + (1164 -(628 + 490))) ]];elseif (v80==(109 -73)) then local v242=v79[950 -(245 + 702) ];local v243=v77[v242];for v314=v242 + (3 -2) ,v79[2 + 2 ] do v243=v243   .. v77[v314] ;end v77[v79[1900 -(260 + 294 + 1344) ]]=v243;else v77[v79[442 -(382 + 58) ]]=v77[v79[9 -6 ]]%v77[v79[(9 -5) + 0 ]] ;end elseif (v80<=(82 -42)) then if (v80<=(112 -74)) then v77[v79[1207 -(902 + 303) ]]=v79[5 -2 ] + v77[v79[9 -5 ]] ;elseif ((731<=2978) and (v80==(35 + 4))) then local v246=v79[1 + 1 ];local v247,v248=v70(v77[v246](v77[v246 + 1 + 0 ]));v72=(v248 + v246) -1 ;local v249=0 + 0 ;for v315=v246,v72 do v249=v249 + (1691 -(1121 + 569)) ;v77[v315]=v247[v249];end else v77[v79[216 -(22 + 192) ]]= #v77[v79[686 -(483 + (914 -714)) ]];end elseif (v80<=(1504 -(1404 + (833 -(431 + 343))))) then local v164=v79[5 -3 ];do return v77[v164](v13(v77,v164 + (1 -0) ,v79[768 -(468 + (599 -302)) ]));end elseif (v80>(604 -(334 + 228))) then local v251=v79[6 -4 ];v77[v251](v13(v77,v251 + (2 -1) ,v79[3 + 0 ]));else v71=v79[5 -2 ];end elseif ((v80<=(854 -(766 + (66 -43)))) or (892>3892)) then if ((v80<=(266 -212)) or (4466==900)) then if (v80<=(14 + 34)) then if ((v80<=(281 -(141 + 95))) or (2084>=2888)) then if (v80>(59 -(12 + 3))) then v77[v79[2 + 0 ]]=v61[v79[7 -4 ]];else local v167=v79[4 -2 ];v77[v167]=v77[v167]();end elseif (v80<=(11 + 35)) then local v169=v79[5 -3 ];v77[v169](v13(v77,v169 + 1 + 0 ,v72));elseif (v80>(25 + 22)) then v77[v79[1 + 1 + 0 ]]=v77[v79[4 -1 ]];else v77[v79[915 -(910 + 3) ]]=v77[v79[2 + 1 ]][v79[167 -((1787 -(556 + 1139)) + 71) ]];end elseif ((479<1863) and (v80<=(26 + 25))) then if (v80<=((1212 -(6 + 9)) -(556 + 592))) then local v170=v79[2 -0 ];local v171,v172=v70(v77[v170](v13(v77,v170 + (766 -(574 + 191)) ,v72)));v72=(v172 + v170) -(1 + 0 + 0) ;local v173=0 -0 ;for v203=v170,v72 do local v204=0 + 0 ;while true do if (v204==0) then v173=v173 + (850 -(254 + 595)) ;v77[v203]=v171[v173];break;end end end elseif (v80>((91 + 85) -(55 + 71))) then v77[v79[2 -0 ]][v77[v79[1793 -(573 + 1217) ]]]=v77[v79[(179 -(28 + 141)) -6 ]];elseif (v77[v79[2]] or (2428>=4038)) then v71=v71 + 1 + 0 + 0 ;else v71=v79[3];end elseif (v80<=(83 -31)) then v77[v79[1 + 1 ]]={};elseif ((v80==(1530 -((35 -6) + 1448))) or (2878>2897)) then local v259=v77[v79[943 -(714 + 225) ]];if  not v259 then v71=v71 + 1 ;else local v351=0 -0 ;while true do if (v351==(0 -0)) then v77[v79[2 -0 ]]=v259;v71=v79[1 + 2 ];break;end end end else local v260=v79[2 -0 ];do return v13(v77,v260,v72);end end elseif (v80<=(40 + 16 + 3)) then if (v80<=(862 -(118 + 688))) then if (v80>(103 -(25 + 23))) then local v175=v79[1 + 1 ];v77[v175]=v77[v175](v77[v175 + (1546 -(320 + 1225)) ]);else v77[v79[1888 -(927 + 959) ]]=v62[v79[10 -7 ]];end elseif ((v80<=57) or (2469>3676)) then v77[v79[734 -(16 + 716) ]]=v29(v68[v79[5 -2 ]],nil,v62);elseif (v80==(155 -(11 + 86))) then do return;end else v77[v79[4 -2 ]]=v29(v68[v79[1 + 2 ]],nil,v62);end elseif (v80<=(347 -(175 + 110))) then if ((233<487) and (v80<=(151 -91))) then v77[v79[(1326 -(486 + 831)) -7 ]]=v77[v79[1799 -(503 + 1293) ]];elseif (v80>(1087 -(834 + 192))) then local v262=v79[5 -3 ];v77[v262]=v77[v262](v13(v77,v262 + (2 -1) + 0 ,v72));else v77[v79[1063 -(810 + 251) ]]={};end elseif ((2473>=201) and (v80<=(97 -34))) then v77[v79[2 + 0 ]]=v77[v79[1 + 2 ]] + v79[4 + 0 ] ;elseif (v80>(225 -161)) then if (v77[v79[5 -3 ]]==v79[366 -(112 + 250) ]) then v71=v71 + (534 -(43 + 490)) ;else v71=v79[736 -(711 + 22) ];end else local v265=v79[2 + 0 ];v77[v265](v13(v77,v265 + 1 + 0 ,v79[11 -8 ]));end elseif ((4120>=133) and (v80<=(935 -(240 + 619)))) then if (v80<=(17 + 53)) then if ((3080>=1986) and (v80<=(105 -38))) then if (v80==(5 + 61)) then v77[v79[(330 + 1416) -(1344 + 400) ]]=v79[408 -((806 -551) + 150) ] + v77[v79[4 + 0 ]] ;else v77[v79[2 + 0 ]]();end elseif ((v80<=((1553 -(668 + 595)) -(200 + 22))) or (1439>3538)) then v77[v79[6 -4 ]][v77[v79[1909 -(1665 + 241) ]]]=v79[4];elseif (v80==(786 -(373 + 344))) then if  not v77[v79[1741 -(404 + 1335) ]] then v71=v71 + 1 + 0 ;else v71=v79[409 -(183 + 223) ];end elseif ( not v77[v79[2 -0 ]] or (419<7)) then v71=v71 + (1100 -(35 + 1064)) ;else v71=v79[2 + 1 ];end elseif ((2820==2820) and (v80<=(155 -82))) then if ((v80<=(6 + 20 + 45)) or (4362<=3527)) then v77[v79[339 -(10 + 327) ]]=v61[v79[1262 -(233 + 1026) ]];elseif (v80>(51 + 21)) then v77[v79[340 -(118 + 220) ]][v79[1 + 2 ]]=v79[453 -(108 + 341) ];else local v268=v79[1 + 1 ];v77[v268]=v77[v268]();end elseif (v80<=(312 -238)) then local v188=v79[(4077 -2582) -(711 + 782) ];local v189={};for v205=1, #v76 do local v206=v76[v205];for v270=0 -0 , #v206 do local v271=v206[v270];local v272=v271[470 -(270 + 199) ];local v273=v271[1 + 1 ];if ((v272==v77) and (v273>=v188)) then v189[v273]=v272[v273];v271[1820 -(580 + 1239) ]=v189;end end end elseif (v80>(222 -147)) then v77[v79[299 -(36 + 261) ]]=v77[v79[4 -1 ]][v79[4 + (290 -(23 + 267)) ]];else v71=v79[3];end elseif (v80<=(3 + 78)) then if (v80<=(61 + 17)) then if (v80==(34 + 43)) then if ((2613<=2680) and v77[v79[4 -2 ]]) then v71=v71 + 1 + 0 ;else v71=v79[2 + 1 ];end else local v190=1167 -(645 + 522) ;local v191;while true do if ((1133 -(549 + 584))==v190) then v191=v79[1792 -((2954 -(1129 + 815)) + 780) ];v77[v191]=v77[v191](v13(v77,v191 + 1 + 0 ,v72));break;end end end elseif (v80<=79) then v77[v79[6 -4 ]]=v79[14 -11 ];elseif ((v80>(234 -154)) or (1482>=4288)) then local v278=v79[1838 -(1045 + 791) ];local v279={};for v320=2 -1 , #v76 do local v321=0 -0 ;local v322;while true do if (v321==(505 -((738 -(371 + 16)) + 154))) then v322=v76[v320];for v388=1574 -(1281 + 293) , #v322 do local v389=266 -(28 + 238) ;local v390;local v391;local v392;while true do if (v389==((1750 -(1326 + 424)) -0)) then v390=v322[v388];v391=v390[1560 -(1381 + (336 -158)) ];v389=1 + 0 ;end if ((v389==(3 -(7 -5))) or (2462>4426)) then v392=v390[2 + 0 ];if ((v391==v77) and (v392>=v278)) then local v407=0;while true do if (v407==(0 + 0)) then v279[v392]=v391[v392];v390[3 -(120 -(88 + 30)) ]=v279;break;end end end break;end end end break;end end end else local v280=0 + 0 ;local v281;local v282;local v283;while true do if (v280==(471 -((1152 -(720 + 51)) + 89))) then v283=v77[v281 + 2 ];if (v283>((0 -0) + (1776 -(421 + 1355)))) then if ((4774==4774) and (v282>v77[v281 + 1 + 0 ])) then v71=v79[3];else v77[v281 + (4 -1) ]=v282;end elseif (v282<v77[v281 + (1157 -(1074 + 82)) ]) then v71=v79[6 -3 ];else v77[v281 + ((2947 -1160) -(214 + 1570)) ]=v282;end break;end if (v280==(1455 -(990 + 465))) then v281=v79[1 + 0 + (1084 -(286 + 797)) ];v282=v77[v281];v280=1 + 0 ;end end end elseif (v80<=(28 + 56)) then if ((566<=960) and (v80<=(342 -260))) then local v194=(0 -0) + 0 ;local v195;local v196;local v197;local v198;while true do if ((v194==(0 -0)) or (2910<=1930)) then v195=v79[2];v196,v197=v70(v77[v195](v13(v77,v195 + (3 -2) ,v72)));v194=1727 -(1668 + 58) ;end if ((v194==(7 -5)) or (19>452)) then for v358=v195,v72 do v198=v198 + (1087 -(686 + (662 -262))) ;v77[v358]=v196[v198];end break;end if (v194==(627 -(512 + 114))) then v72=(v197 + v195) -(2 -1) ;v198=0 -0 ;v194=2;end end elseif (v80>83) then v77[v79[6 -4 ]]=v79[1 + 2 ];else do return;end end elseif (v80<=(40 + 45)) then if ((v79[1 + 1 ]==v77[v79[5 -1 ]]) or (907>3152)) then v71=v71 + ((440 -(397 + 42)) -0) ;else v71=v79[3];end elseif (v80==(75 + 11)) then local v287=v79[6 -4 ];v77[v287](v77[v287 + (1995 -(109 + 1885)) ]);else local v288=v79[1 + 1 ];local v289,v290=v70(v77[v288](v77[v288 + 1 ]));v72=(v290 + v288) -(1470 -(1269 + 200)) ;local v291=0 -0 ;for v324=v288,v72 do v291=v291 + ((255 + 561) -((898 -(24 + 776)) + 717)) ;v77[v324]=v289[v291];end end v71=v71 + (827 -(802 + 24)) ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
