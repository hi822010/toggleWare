--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then local v83=0;while true do if (v83==0) then v19=v0(v3(v30,1,1));return "";end end else local v84=v2(v0(v30,16));if v19 then local v94=0;local v95;while true do if (v94==1) then return v95;end if (v94==0) then v95=v5(v84,v19);v19=nil;v94=1;end end else return v84;end end end);local function v20(v31,v32,v33) if v33 then local v85=0 -0 ;local v86;while true do if (v85==(0 -0)) then v86=(v31/((3 -1)^(v32-(2 -1))))%((621 -(555 + 64))^(((v33-(932 -(857 + 74))) -(v32-(569 -(367 + 201)))) + 1)) ;return v86-(v86%(928 -(214 + (2350 -(1523 + 114))))) ;end end else local v87=(1 + 1)^(v32-(1 + 0 + 0)) ;return (((v31%(v87 + v87))>=v87) and 1) or (877 -(282 + (847 -252))) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35=1065 -(68 + 997) ;local v36;local v37;while true do if (v35==(1271 -(226 + 1044))) then return (v37 * 256) + v36 ;end if (v35==(0 -0)) then v36,v37=v1(v16,v18,v18 + (119 -(32 + (1042 -(892 + 65)))) );v18=v18 + 2 + 0 ;v35=1 + 0 ;end end end local function v23() local v38=0;local v39;local v40;local v41;local v42;while true do if (v38==(2 -1)) then return (v42 * (31011612 -(10468718 + 3765678))) + (v41 * (120312 -54776)) + (v40 * ((2408 -1802) -(87 + 263))) + v39 ;end if (v38==(180 -(67 + 113))) then v39,v40,v41,v42=v1(v16,v18,v18 + 3 + 0 );v18=v18 + 4 ;v38=2 -1 ;end end end local function v24() local v43=952 -(802 + 150) ;local v44;local v45;local v46;local v47;local v48;local v49;while true do if (v43==((1754 -(760 + 987)) -4)) then if (v48==(0 -0)) then if (v47==(0 + 0)) then return v49 * (997 -(915 + 82)) ;else v48=2 -1 ;v46=0 + 0 ;end elseif (v48==(1193 + (2767 -(1789 + 124)))) then return ((v47==(1138 -(116 + 1022))) and (v49 * ((1 -0)/(0 + (766 -(745 + 21)))))) or (v49 * NaN) ;end return v8(v49,v48-((761 + 1449) -(1069 + (324 -206))) ) * (v46 + (v47/(((27 -20) -(1 + 4))^(117 -65)))) ;end if (v43==(1 -0)) then v46=860 -(640 + 174 + 45) ;v47=(v20(v45,2 -1 ,(1059 -(87 + 968)) + 16 ) * ((3 -1)^(32 + (0 -0)))) + v44 ;v43=793 -(334 + 34 + 423) ;end if ((0 -0)==v43) then v44=v23();v45=v23();v43=19 -(10 + 8) ;end if ((1082 -(1020 + 60))==v43) then v48=v20(v45,80 -59 ,(234 -130) -73 );v49=((v20(v45,151 -119 )==(443 -(416 + 26))) and  -(3 -2)) or (1 + 0) ;v43=(1422 -(447 + 966)) -6 ;end end end local function v25(v50) local v51;if  not v50 then local v88=0 -0 ;while true do if ((1817 -(1703 + 114))==v88) then v50=v23();if (v50==(701 -(376 + 325))) then return "";end break;end end end v51=v3(v16,v18,(v18 + v50) -1 );v18=v18 + v50 ;local v52={};for v67=1, #v51 do v52[v67]=v2(v1(v3(v51,v67,v67)));end return v6(v52);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v53=(function() return 0 + 0 ;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();local v59=(function() return;end)();local v60=(function() return;end)();while true do if (v53~=(1691 -(209 + 1481))) then else local v91=(function() return 0 -0 ;end)();while true do if (v91~=(1638 -(1373 + 263))) then else v53=(function() return 2;end)();break;end if (0~=v91) then else v58=(function() return {v55,v56,nil,v57};end)();v59=(function() return v23();end)();v91=(function() return 1;end)();end if (1==v91) then v60=(function() return {};end)();for v110= #"}",v59 do local v111=(function() return 0 + 0 ;end)();local v112=(function() return;end)();local v113=(function() return;end)();local v114=(function() return;end)();while true do if ((0 -0)~=v111) then else v112=(function() return 0;end)();v113=(function() return nil;end)();v111=(function() return 1 -0 ;end)();end if ((1385 -(746 + 638))~=v111) then else v114=(function() return nil;end)();while true do if ((0 + 0)~=v112) then else local v128=(function() return 0;end)();while true do if (v128==(0 -0)) then v113=(function() return v21();end)();v114=(function() return nil;end)();v128=(function() return 1;end)();end if ((342 -(218 + 123))==v128) then v112=(function() return 1;end)();break;end end end if (v112~=(1582 -(1535 + 46))) then else if (v113== #">") then v114=(function() return v21()~=(0 + 0) ;end)();elseif (v113==(1 + 1)) then v114=(function() return v24();end)();elseif (v113~= #"91(") then else v114=(function() return v25();end)();end v60[v110]=(function() return v114;end)();break;end end break;end end end v91=(function() return 562 -(306 + 254) ;end)();end end end if (v53==(0 + 0)) then local v92=(function() return 0 -0 ;end)();while true do if (v92~=2) then else v53=(function() return 1468 -(899 + 568) ;end)();break;end if (v92~=(1 + 0)) then else v56=(function() return {};end)();v57=(function() return {};end)();v92=(function() return 4 -2 ;end)();end if (v92==(603 -(268 + 335))) then v54=(function() return function(v115,v116,v117) local v118=(function() return 0;end)();local v119=(function() return;end)();while true do if ((290 -(60 + 230))==v118) then v119=(function() return 0;end)();while true do if (v119~=(572 -(426 + 146))) then else local v130=(function() return 0 + 0 ;end)();while true do if (v130==(1456 -(282 + 1174))) then local v132=(function() return 811 -(569 + 242) ;end)();while true do if (v132==0) then v115[v116-#"[" ]=(function() return v117();end)();return v115,v116,v117;end end end end end end break;end end end;end)();v55=(function() return {};end)();v92=(function() return 2 -1 ;end)();end end end if (v53==2) then v58[ #"91("]=(function() return v21();end)();for v96= #" ",v23() do local v97=(function() return v21();end)();if (v20(v97, #"[", #"}")==0) then local v105=(function() return 0 + 0 ;end)();local v106=(function() return;end)();local v107=(function() return;end)();local v108=(function() return;end)();local v109=(function() return;end)();while true do if (v105~=(1026 -(706 + 318))) then else while true do if (v106~= #".") then else local v122=(function() return 1251 -(721 + 530) ;end)();while true do if (v122~=1) then else v106=(function() return 1273 -(945 + 326) ;end)();break;end if (v122~=(0 -0)) then else v109=(function() return {v22(),v22(),nil,nil};end)();if (v107==0) then local v133=(function() return 700 -(271 + 429) ;end)();local v134=(function() return;end)();while true do if (0==v133) then v134=(function() return 0 + 0 ;end)();while true do if ((1500 -(1408 + 92))~=v134) then else v109[ #"nil"]=(function() return v22();end)();v109[ #"xnxx"]=(function() return v22();end)();break;end end break;end end elseif (v107== #":") then v109[ #"gha"]=(function() return v23();end)();elseif (v107==2) then v109[ #"gha"]=(function() return v23() -(2^16) ;end)();elseif (v107~= #"nil") then else local v365=(function() return 0;end)();local v366=(function() return;end)();while true do if (v365~=(1086 -(461 + 625))) then else v366=(function() return 0;end)();while true do if (v366==(1288 -(993 + 295))) then v109[ #"91("]=(function() return v23() -(2^(1 + 15)) ;end)();v109[ #".com"]=(function() return v22();end)();break;end end break;end end end v122=(function() return 1172 -(418 + 753) ;end)();end end end if (v106==(1 + 1)) then local v123=(function() return 0 + 0 ;end)();local v124=(function() return;end)();while true do if (v123~=0) then else v124=(function() return 0;end)();while true do if (v124~=(1 + 0)) then else v106=(function() return  #"gha";end)();break;end if (v124~=0) then else if (v20(v108, #"]", #"|")== #".") then v109[1 + 1 ]=(function() return v60[v109[531 -(406 + 123) ]];end)();end if (v20(v108,2,1771 -(1749 + 20) )~= #"[") then else v109[ #"xnx"]=(function() return v60[v109[ #"gha"]];end)();end v124=(function() return 1;end)();end end break;end end end if ( #"xnx"~=v106) then else if (v20(v108, #"-19", #"xxx")== #".") then v109[ #".com"]=(function() return v60[v109[ #"http"]];end)();end v55[v96]=(function() return v109;end)();break;end if (v106==0) then local v126=(function() return 0;end)();local v127=(function() return;end)();while true do if (v126==0) then v127=(function() return 0;end)();while true do if (v127==0) then v107=(function() return v20(v97,2, #"91(");end)();v108=(function() return v20(v97, #"http",2 + 4 );end)();v127=(function() return 1323 -(1249 + 73) ;end)();end if (v127~=(1 + 0)) then else v106=(function() return  #"|";end)();break;end end break;end end end end break;end if (v105==0) then local v120=(function() return 0;end)();local v121=(function() return;end)();while true do if (v120~=0) then else v121=(function() return 0;end)();while true do if (v121~=(1145 -(466 + 679))) then else v106=(function() return 0 -0 ;end)();v107=(function() return nil;end)();v121=(function() return 1;end)();end if (v121==(2 -1)) then v105=(function() return 1;end)();break;end end break;end end end if (v105==(1901 -(106 + 1794))) then v108=(function() return nil;end)();v109=(function() return nil;end)();v105=(function() return 2;end)();end end end end for v98= #"|",v23() do v56,v98,v28=(function() return v54(v56,v98,v28);end)();end return v58;end end end local function v29(v61,v62,v63) local v64=v61[1 + (0 -0) ];local v65=v61[2];local v66=v61[526 -(423 + 100) ];return function(...) local v69=v64;local v70=v65;local v71=v66;local v72=v27;local v73=1 + 0 ;local v74= -(2 -(291 -(23 + 267)));local v75={};local v76={...};local v77=v12("#",...) -(115 -(4 + 110)) ;local v78={};local v79={};for v89=584 -(57 + 527) ,v77 do if ((v89>=v71) or (3534>4677)) then v75[v89-v71 ]=v76[v89 + (1428 -(41 + 1386)) ];else v79[v89]=v76[v89 + ((2048 -(1129 + 815)) -(17 + (473 -(371 + 16)))) ];end end local v80=(v77-v71) + (2 -1) ;local v81;local v82;while true do local v90=0 + 0 ;while true do if ((v90==(1 -0)) or (4859<2999)) then if ((4726>2407) and (v82<=(124 -81))) then if (v82<=((1937 -(1326 + 424)) -(122 + 44))) then if (v82<=(42 -(19 + 13))) then if ((v82<=(6 -2)) or (1284>3669)) then if (v82<=(3 -2)) then if (v82==(0 + 0)) then v79[v81[1 + 1 ]][v79[v81[5 -2 ]]]=v81[4];elseif  not v79[v81[67 -((56 -26) + 35) ]] then v73=v73 + (3 -2) + 0 ;else v73=v81[1260 -(1043 + 214) ];end elseif (v82<=(7 -5)) then v79[v81[1214 -(323 + 889) ]]=v63[v81[7 -4 ]];elseif ((1117<2549) and (v82==(7 -4))) then local v201=v81[582 -(361 + 219) ];v79[v201](v79[v201 + (321 -(53 + 267)) ]);else do return;end end elseif (v82<=7) then if (v82<=(2 + (121 -(88 + 30)))) then v79[v81[415 -((786 -(720 + 51)) + 398) ]]=v79[v81[985 -((39 -21) + (2740 -(421 + 1355))) ]] + v81[14 -10 ] ;elseif (v82==6) then local v202=v81[2 + 0 ];v79[v202]=v79[v202](v13(v79,v202 + 1 + 0 ,v81[1 + 2 ]));else local v204=v81[(1404 -552) -(20 + 408 + 422) ];local v205,v206=v72(v79[v204](v13(v79,v204 + 1 + 0 ,v81[1099 -(709 + 387) ])));v74=(v206 + v204) -(127 -(116 + 10)) ;local v207=0 -0 ;for v300=v204,v74 do local v301=0 + 0 ;while true do if ((v301==((1821 -(286 + 797)) -(542 + 196))) or (2851>4774)) then v207=v207 + (1 -0) ;v79[v300]=v205[v207];break;end end end end elseif (v82<=(3 + 5)) then v79[v81[2 + 0 ]]=v29(v70[v81[2 + 1 ]],nil,v63);elseif (v82==(23 -14)) then v79[v81[4 -2 ]]=v81[1554 -(1126 + 425) ] + v79[v81[409 -(118 + 287) ]] ;else for v302=v81[1882 -(446 + 1434) ],v81[1286 -(1040 + 243) ] do v79[v302]=nil;end end elseif ((1031<3848) and (v82<=(44 -29))) then if ((1854>903) and (v82<=(46 -34))) then if ((4663>1860) and (v82>((4138 -3006) -(118 + 1003)))) then v79[v81[2 -0 ]]=v79[v81[(447 -(397 + 42)) -5 ]][v81[458 -(13 + 441) ]];else local v143=v81[379 -(142 + 235) ];v79[v143]=v79[v143]();end elseif ((v82<=((19 + 39) -(845 -(24 + 776)))) or (3053<=469)) then local v145=v81[1 + 1 ];do return v13(v79,v145,v74);end elseif (v82>(991 -(553 + 424))) then v79[v81[9 -7 ]]=v79[v81[5 -2 ]];else v79[v81[7 -5 ]]=v79[v81[3 + 0 ]];end elseif ((v82<=(7 + 11)) or (540>=1869)) then if (v82<=(16 + 0)) then local v146=v81[2 + 0 ];local v147=v79[v146 + (5 -3) ];local v148=v79[v146] + v147 ;v79[v146]=v148;if ((3292==3292) and (v147>(0 + 0))) then if (v148<=v79[v146 + ((1 -0) -0) ]) then v73=v81[2 + 1 ];v79[v146 + (6 -3) ]=v148;end elseif (v148>=v79[v146 + (2 -1) ]) then v73=v81[6 -3 ];v79[v146 + 1 + (787 -(222 + 563)) ]=v148;end elseif ((1038<=2645) and (v82==17)) then v73=v81[14 -11 ];else v79[v81[(1663 -908) -(239 + 514) ]]= #v79[v81[8 -5 ]];end elseif ((v82<=(7 + 12)) or (3230<2525)) then v79[v81[1 + 1 ]][v81[2 + 1 ]]=v81[4 + 0 ];elseif (v82>(1349 -(574 + 223 + 532))) then v79[v81[2 + 0 ]]=v81[2 + 1 ]~=(0 + 0) ;else local v216=0 -0 ;local v217;while true do if ((v216==(1202 -(373 + 829))) or (2400>4083)) then v217=v79[v81[735 -(476 + (445 -(23 + 167))) ]];if  not v217 then v73=v73 + (1131 -(369 + 761)) ;else v79[v81[2 + 0 ]]=v217;v73=v81[5 -2 ];end break;end end end elseif (v82<=((1916 -(690 + 1108)) -(84 + 2))) then if ((v82<=(48 -22)) or (2745>4359)) then if (v82<=(7 + 10 + 6)) then if (v82==(864 -(497 + 345))) then local v152=238 -(64 + 174) ;local v153;local v154;while true do if (v152==(1 + 0)) then for v340=v153 + (1334 -(605 + 728)) ,v81[1 + 3 ] do v154=v154   .. v79[v340] ;end v79[v81[2 -0 ]]=v154;break;end if (v152==(336 -(144 + 192))) then v153=v81[(181 + 38) -(42 + 174) ];v154=v79[v153];v152=1 + 0 ;end end else local v155=(848 -(40 + 808)) + 0 ;local v156;local v157;local v158;local v159;while true do if (v155==(0 + 0)) then v156=v81[1506 -(363 + 1141) ];v157,v158=v72(v79[v156](v79[v156 + 1 + 0 ]));v155=1581 -(1183 + 397) ;end if (v155==(1 + 1 + 0)) then for v341=v156,v74 do v159=v159 + (2 -1) ;v79[v341]=v157[v159];end break;end if (v155==(1 + 0)) then v74=(v158 + v156) -(1 + 0) ;v159=1975 -(1913 + 62) ;v155=2 + 0 ;end end end elseif (v82<=(63 -39)) then v79[v81[5 -(11 -8) ]]=v79[v81[1936 -(565 + 1368) ]] + v81[15 -11 ] ;elseif (v82>((1612 + 74) -(1477 + 98 + 86))) then if (v79[v81[2 -0 ]]==v81[4 + 0 ]) then v73=v73 + (857 -(564 + 292)) ;else v73=v81[4 -1 ];end else v79[v81[5 -3 ]][v79[v81[3]]]=v79[v81[308 -(244 + 60) ]];end elseif ((172<=1810) and (v82<=(634 -(316 + 289)))) then if (v82<=(21 + 6)) then local v161=0 + 0 ;local v162;while true do if (v161==(476 -(41 + 435))) then v162=v81[427 -(360 + 65) ];v79[v162](v13(v79,v162 + 1 + 0 ,v81[257 -(79 + 175) ]));break;end end elseif (v82==(1029 -(938 + 63))) then local v220=v81[2 + 0 + 0 ];v79[v220]=v79[v220](v13(v79,v220 + 1 ,v81[1128 -((1507 -(47 + 524)) + 189) ]));else local v222=v81[1 + 1 ];v79[v222]=v79[v222](v79[v222 + (1614 -(1016 + 549 + 48)) ]);end elseif (v82<=(19 + 11)) then v79[v81[1140 -(782 + 356) ]]=v79[v81[184 -((251 -159) + 89) ]]%v81[271 -(176 + 91) ] ;elseif ((v82>((119 -39) -49)) or (492>=4959)) then local v224=v81[2 -0 ];v79[v224]=v79[v224](v79[v224 + 1 + 0 ]);elseif (v81[1094 -(975 + 117) ]==v79[v81[1879 -(157 + (3917 -2199)) ]]) then v73=v73 + 1 + 0 ;else v73=v81[3];end elseif (v82<=(33 + 4)) then if (v82<=(120 -86)) then if (v82==(1759 -(1165 + 561))) then v79[v81[6 -(1 + 3) ]][v79[v81[8 -(15 -10) ]]]=v81[1022 -(697 + 321) ];else v79[v81[5 -3 ]]={};end elseif (v82<=(73 -38)) then local v167=0 -0 ;local v168;local v169;while true do if ((1 + 0)==v167) then for v346=1 -0 , #v78 do local v347=v78[v346];for v350=0 -0 , #v347 do local v351=v347[v350];local v352=v351[1136 -(832 + 303) ];local v353=v351[(469 + 760) -(322 + 905) ];if ((v352==v79) and (v353>=v168)) then v169[v353]=v352[v353];v351[612 -(602 + 9) ]=v169;end end end break;end if (v167==(1189 -(449 + 740))) then v168=v81[(1353 -(341 + 138)) -(826 + 46) ];v169={};v167=948 -(245 + 702) ;end end elseif (v82>(113 -77)) then local v226=v70[v81[1 + 2 ]];local v227;local v228={};v227=v10({},{__index=function(v310,v311) local v312=v228[v311];return v312[1][v312[1900 -(260 + 1638) ]];end,__newindex=function(v313,v314,v315) local v316=789 -(766 + 23) ;local v317;while true do if (v316==(440 -(382 + 58))) then v317=v228[v314];v317[3 -2 ][v317[2 + 0 ]]=v315;break;end end end});for v318=1 -0 ,v81[13 -9 ] do local v319=0 -0 ;local v320;while true do if ((1205 -((2901 -1999) + 303))==v319) then v73=v73 + 1 + (0 -0) ;v320=v69[v73];v319=1 -0 ;end if ((2 -1)==v319) then if (v320[(882 -(581 + 300)) + 0 ]==(1704 -(1121 + 569))) then v228[v318-(215 -((1242 -(855 + 365)) + 192)) ]={v79,v320[1466 -(1404 + 59) ]};else v228[v318-(1 + 0) ]={v62,v320[768 -(468 + 297) ]};end v78[ #v78 + (563 -(334 + 228)) ]=v228;break;end end end v79[v81[6 -4 ]]=v29(v226,v227,v63);else local v230=v81[6 -4 ];local v231=v79[v230 + (4 -2) ];local v232=v79[v230] + v231 ;v79[v230]=v232;if (v231>(0 -0)) then if (v232<=v79[v230 + 1 + 0 ]) then local v373=0 + (0 -0) ;while true do if ((v373==(236 -(141 + 95))) or (756==2072)) then v73=v81[(455 + 937) -((1370 -(1030 + 205)) + 1178 + 76) ];v79[v230 + 3 + 0 + (286 -(156 + 130)) ]=v232;break;end end end elseif ((1605<=4664) and (v232>=v79[v230 + (2 -1) ])) then v73=v81[6 -3 ];v79[v230 + 1 + 2 ]=v232;end end elseif (v82<=((247 -138) -69)) then if ((1816==1816) and (v82<=38)) then v79[v81[(2 -0) + (0 -0) ]][v81[2 + 1 ]]=v81[5 -(1 + 0) ];elseif ((v82==(24 + 15)) or (621>3100)) then v79[v81[165 -(92 + 71) ]]();else local v234=0 + 0 ;local v235;local v236;local v237;local v238;while true do if (v234==(2 -0)) then for v376=v235,v74 do v238=v238 + (766 -(574 + 191)) ;v79[v376]=v236[v238];end break;end if ((v234==(1 + 0)) or (1157>=4225)) then v74=(v237 + v235) -(2 -(1 + 0)) ;v238=0 + 0 ;v234=4 -2 ;end if (v234==(849 -(254 + 595))) then v235=v81[(197 -(10 + 59)) -(55 + 71) ];v236,v237=v72(v79[v235](v13(v79,v235 + (1 -0) ,v74)));v234=1791 -(573 + 1217) ;end end end elseif (v82<=(1067 -(834 + 192))) then v79[v81[5 -3 ]][v81[1 + 2 ]]=v79[v81[1 + 3 ]];elseif (v82>(64 -22)) then local v239=304 -(85 + 215 + 4) ;local v240;local v241;while true do if (v239==1) then for v379=1, #v78 do local v380=v78[v379];for v410=0 -(0 -0) , #v380 do local v411=0 -0 ;local v412;local v413;local v414;while true do if ((v411==(939 -(714 + 225))) or (4986==4138)) then v412=v380[v410];v413=v412[1 + (1163 -(671 + 492)) ];v411=1;end if (v411==(2 -1)) then v414=v412[2 -0 ];if ((v413==v79) and (v414>=v240)) then v241[v414]=v413[v414];v412[1]=v241;end break;end end end end break;end if (v239==(0 + 0)) then v240=v81[2 -0 ];v241={};v239=(643 + 164) -(118 + 688) ;end end else local v242=48 -(25 + 23) ;local v243;local v244;local v245;while true do if (v242==0) then v243=v70[v81[1 + 2 ]];v244=nil;v242=1887 -(927 + 959) ;end if (v242==(6 -4)) then for v381=733 -(16 + 716) ,v81[7 -3 ] do local v382=97 -(11 + 86) ;local v383;while true do if (v382==(2 -1)) then if (v383[286 -(175 + 110) ]==(1920 -(1665 + 241))) then v245[v381-(2 -1) ]={v79,v383[8 -5 ]};else v245[v381-(1 + 0) ]={v62,v383[3 + 0 ]};end v78[ #v78 + (2 -1) ]=v245;break;end if (v382==(0 + 0)) then v73=v73 + 1 + 0 ;v383=v69[v73];v382=534 -(43 + 490) ;end end end v79[v81[(628 + 107) -(711 + 22) ]]=v29(v243,v244,v63);break;end if (v242==(1667 -(636 + (2975 -(1036 + 909))))) then v245={};v244=v10({},{__index=function(v384,v385) local v386=v245[v385];return v386[3 -2 ][v386[861 -(240 + 619) ]];end,__newindex=function(v387,v388,v389) local v390=v245[v388];v390[1 + 0 ][v390[2 -0 ]]=v389;end});v242=1 + 1 ;end end end elseif (v82<=(1809 -(1344 + 400))) then if (v82<=(459 -(255 + 150))) then if ((v82<=(6 + 4 + (213 -(135 + 40)))) or (2033<=224)) then if (v82<=(36 + 9)) then if ((v82==((58 -34) + 20)) or (1223==2011)) then if v79[v81[8 -(4 + 2) ]] then v73=v73 + ((6 -3) -2) ;else v73=v81[1742 -(404 + 1335) ];end else v79[v81[408 -(183 + 223) ]][v81[3 -0 ]]=v79[v81[3 + 1 ]];end elseif ((4827>4695) and (v82<=(18 + 28))) then if (v81[1 + 1 ]==v79[v81[5 -1 ]]) then v73=v73 + (338 -(10 + 327)) ;else v73=v81[3 + 0 ];end elseif ((3710>3065) and (v82==(385 -(118 + (396 -(50 + 126)))))) then local v248=v81[1 + 1 ];do return v79[v248](v13(v79,v248 + (450 -(108 + 341)) ,v81[1136 -(549 + (1626 -1042)) ]));end else v79[v81[687 -(314 + 371) ]]=v29(v70[v81[2 + 1 ]],nil,v63);end elseif (v82<=(215 -164)) then if (v82<=(1017 -(478 + 490))) then if (v79[v81[(331 + 1164) -(711 + 782) ]]==v81[7 -3 ]) then v73=v73 + (470 -(270 + 199)) ;else v73=v81[9 -(1419 -(1233 + 180)) ];end elseif (v82>((986 -(522 + 447)) + 33)) then local v251=v81[1821 -(580 + 1239) ];local v252=v79[v251];local v253=v79[v251 + (1342 -(1093 + 247)) ];if (v253>(0 -0)) then if (v252>v79[v251 + 1 + 0 ]) then v73=v81[11 -8 ];else v79[v251 + 1 + 2 ]=v252;end elseif ((2135<=2696) and (v252<v79[v251 + 1 + 0 ])) then v73=v81[7 -4 ];else v79[v251 + (9 -6) ]=v252;end else local v254=v81[2 + 0 ];do return v13(v79,v254,v74);end end elseif ((v82<=((2640 -(107 + 1314)) -(645 + 522))) or (1742>4397)) then v79[v81[1792 -(1010 + 780) ]]=v81[3 + 0 ] + v79[v81[4]] ;elseif (v82>(252 -199)) then v79[v81[(3 + 3) -4 ]]=v81[8 -5 ]~=0 ;else local v256=1836 -(1045 + 791) ;local v257;local v258;while true do if (v256==(0 -0)) then v257=v81[7 -(11 -7) ];v258=v79[v257];v256=1 -0 ;end if (v256==(506 -(351 + 154))) then for v396=v257 + ((1 + 1) -1) ,v81[4] do v258=v258   .. v79[v396] ;end v79[v81[1 + (1 -0) ]]=v258;break;end end end elseif ((3900>=1904) and (v82<=(1633 -(1281 + 293)))) then if ((v82<=(322 -(28 + (941 -703)))) or (1724==909)) then if (v82>(122 -67)) then local v177=v81[1561 -(1381 + 178) ];local v178=v79[v81[3 + 0 ]];v79[v177 + 1 + 0 ]=v178;v79[v177]=v178[v81[2 + (1912 -(716 + 1194)) ]];else do return;end end elseif (v82<=(196 -(3 + 136))) then v79[v81[1 + 1 + 0 ]]=v79[v81[(976 -(74 + 429)) -((734 -353) + 89) ]]%v79[v81[4 + 0 ]] ;elseif ((1282<1421) and (v82>(40 + 18))) then v79[v81[2 -0 ]]={};else local v260=v81[1158 -(1074 + 82) ];local v261,v262=v72(v79[v260](v13(v79,v260 + (812 -(721 + 90)) ,v81[1 + 2 ])));v74=(v262 + v260) -(1 -0) ;local v263=1784 -(214 + 1570) ;for v321=v260,v74 do local v322=1455 -(990 + 465) ;while true do if ((4876>=4337) and (v322==(0 -0))) then v263=v263 + 1 + 0 ;v79[v321]=v261[v263];break;end end end end elseif (v82<=(27 + 18 + 17)) then if (v82<=((4 -2) + 58)) then v79[v81[2 + 0 + 0 ]]=v79[v81[11 -8 ]]%v81[(36 -24) -8 ] ;elseif ((4005>=3005) and (v82>(1787 -(1668 + 58)))) then v79[v81[(1552 -924) -(512 + 114) ]]=v63[v81[7 -4 ]];else v79[v81[3 -1 ]][v79[v81[10 -7 ]]]=v79[v81[2 + 2 ]];end elseif ((v82<=(12 + 51)) or (4781<=4448)) then v79[v81[2 + 0 ]]= #v79[v81[11 -8 ]];elseif (v82>(215 -151)) then local v268=v81[1996 -(109 + 1885) ];v79[v268](v79[v268 + (834 -(171 + 662)) ]);else local v269=v81[1471 -(1269 + 200) ];v79[v269](v13(v79,v269 + (3 -2) ,v74));end elseif (v82<=(28 + 48)) then if (v82<=(307 -237)) then if (v82<=(27 + 40)) then if ((1317>172) and (v82==(126 -60))) then local v185=v79[v81[819 -(98 + 717) ]];if ((4791==4791) and  not v185) then v73=v73 + (1994 -(941 + 1052)) ;else local v270=826 -(802 + 24) ;while true do if ((3988>1261) and (v270==(1514 -(822 + (1125 -(279 + 154)))))) then v79[v81[2 -0 ]]=v185;v73=v81[3 -0 ];break;end end end else v79[v81[1 + 1 ]]();end elseif (v82<=(365 -(45 + 252))) then local v186=v81[2 + 0 ];v79[v186]=v79[v186]();elseif ((2240<=3616) and (v82>((790 -(454 + 324)) + 57))) then v73=v81[1 + 2 ];else v79[v81[2]]=v62[v81[(7 + 1) -5 ]];end elseif (v82<=(243 -170)) then if ((v82<=(26 + 45)) or (3988<3947)) then local v188=0 + 0 ;local v189;while true do if (v188==(0 + 0)) then v189=v81[2];v79[v189](v13(v79,v189 + 1 + 0 ,v81[(19 -(12 + 5)) + 1 ]));break;end end elseif (v82==(1505 -(430 + 367 + 636))) then local v274=v81[9 -7 ];local v275,v276=v72(v79[v274](v13(v79,v274 + (1620 -(1427 + 192)) ,v74)));v74=(v276 + v274) -((2 -1) + 0) ;local v277=1963 -(556 + 1407) ;for v324=v274,v74 do local v325=0 -0 ;while true do if (v325==(465 -(170 + 295))) then v277=v277 + 1 + 0 + 0 ;v79[v324]=v275[v277];break;end end end elseif v79[v81[1 + 1 ]] then v73=v73 + (327 -(192 + 134)) ;else v73=v81[(1100 -(277 + 816)) -(17 -13) ];end elseif (v82<=(1350 -(316 + 960))) then if  not v79[v81[2]] then v73=v73 + 1 + 0 ;else v73=v81[(1186 -(1058 + 125)) + 0 ];end elseif (v82==(70 + 1 + 4)) then for v326=v81[7 -5 ],v81[554 -(83 + 468) ] do v79[v326]=nil;end else local v279=v81[1808 -((2177 -(815 + 160)) + 604) ];do return v79[v279](v13(v79,v279 + (4 -(12 -9)) ,v81[4 -1 ]));end end elseif ((4644==4644) and (v82<=(224 -143))) then if (v82<=78) then if (v82>(402 -(45 + 280))) then v79[v81[9 -7 ]]=v79[v81[3 + (0 -0) ]][v81[4 + 0 ]];else local v192=0 + 0 ;local v193;while true do if ((1323>1271) and (v192==(0 + 0))) then v193=v81[1 + 1 ];v79[v193]=v79[v193](v13(v79,v193 + (1 -0) ,v74));break;end end end elseif ((1619>1457) and (v82<=(1990 -(82 + 258 + 1571)))) then local v194=0 + 0 ;local v195;while true do if (v194==(311 -(309 + 2))) then v195=v81[(14 -9) -3 ];v79[v195]=v79[v195](v13(v79,v195 + (1213 -(1090 + 122)) ,v74));break;end end elseif (v82>(1852 -(1733 + 39))) then local v280=v81[6 -4 ];local v281,v282=v72(v79[v280](v79[v280 + ((1900 -(41 + 1857)) -1) ]));v74=(v282 + v280) -(1119 -(628 + 490)) ;local v283=1034 -(125 + 909) ;for v332=v280,v74 do v283=v283 + (2 -1) ;v79[v332]=v281[v283];end else v79[v81[1950 -(1096 + 852) ]]=v62[v81[2 + 1 ]];end elseif (v82<=(119 -35)) then if ((v82<=(80 + 2)) or (2860<1808)) then v79[v81[514 -(409 + 103) ]]=v81[239 -(46 + 190) ];elseif (v82>(178 -((1944 -(1222 + 671)) + 44))) then local v286=v81[1 + 1 ];v79[v286](v13(v79,v286 + (1318 -(1114 + 203)) ,v74));else local v287=v81[728 -((589 -361) + 498) ];local v288=v79[v81[1 + (2 -0) ]];v79[v287 + 1 + 0 ]=v288;v79[v287]=v288[v81[667 -((1356 -(229 + 953)) + 489) ]];end elseif (v82<=(221 -136)) then v79[v81[1907 -((2604 -(1111 + 663)) + 1075) ]]=v79[v81[527 -(303 + 221) ]]%v79[v81[1273 -(231 + 1038) ]] ;elseif (v82>(72 + 14)) then local v292=v81[1164 -(171 + 991) ];local v293=v79[v292];local v294=v79[v292 + (8 -6) ];if ((v294>(0 -0)) or (739>=1809)) then if (v293>v79[v292 + (2 -1) ]) then v73=v81[3 + (1579 -(874 + 705)) ];else v79[v292 + (10 -7) ]=v293;end elseif (v293<v79[v292 + 1 + 0 ]) then v73=v81[8 -5 ];else v79[v292 + (4 -1) ]=v293;end else v79[v81[6 -(1 + 3) ]]=v81[1251 -(111 + 1137) ];end v73=v73 + (159 -(91 + 67)) ;break;end if (v90==(0 -0)) then v81=v69[v73];v82=v81[1];v90=1;end end end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
